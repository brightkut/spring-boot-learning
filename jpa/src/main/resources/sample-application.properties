spring.application.name=jpa

#####  Setup these for initialize connection DB #####

# Setup this to allow jpa to use otherwise it is not able to use this `spring.datasource.url`
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.jpa.hibernate.connection.provider_class=com.zaxxer.hikari.hibernate.HikariConnectionProvider

# Setup URL
spring.datasource.url=jdbc:postgresql://localhost:5432/mydatabase
# Set Driver
spring.datasource.driver-class-name=org.postgresql.Driver
#Set username and password
spring.datasource.username=myuser
spring.datasource.password=secret
# Configure type of ddl
# create ? Hibernate first drops existing tables and then creates new tables.
# update ? The object model created based on the mappings (annotations or XML) is compared with the existing schema, and then Hibernate updates the schema according to the diff. It never deletes the existing tables or columns even if they are no longer required by the application.
# create-drop ? similar to create, with the addition that Hibernate will drop the database after all operations are completed; typically used for unit testing
# validate ? Hibernate only validates whether the tables and columns exist; otherwise, it throws an exception.
# none ? This value effectively turns off the DDL generation.
spring.jpa.hibernate.ddl-auto=create-drop
# Display sql query in log
spring.jpa.show-sql=true
# pretty-print the SQL in log
spring.jpa.properties.hibernate.format_sql=true

# Hikari configuration for data source
spring.datasource.hikari.connection-timeout=50000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=900000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=10
spring.datasource.hikari.pool-name=ConnPool

# Log configuration of Hikari in console
logging.level.com.zaxxer.hikari.HikariConfig=DEBUG
logging.level.com.zaxxer.hikari=TRACE

# Naming field in DB from Camel case to Snake case if we need to change the naming convention,
# we can create the custom strategy.
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

